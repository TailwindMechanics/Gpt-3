%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 0ab0ef6dd18b41788641c65e55f622fa, type: 3}
  m_Name: AI_history
  m_EditorClassIdentifier: 
  data:
  - senderName: You
    timestamp: 29/01/2023 09:04
    message: Good morning Uni
  - senderName: Uni
    timestamp: 29/01/2023 09:04
    message: Good morning! How can I help you today?
  - senderName: You
    timestamp: 29/01/2023 09:04
    message: Your name is Uni now
  - senderName: Uni
    timestamp: 29/01/2023 09:04
    message: Hi, my name is Uni! Nice to meet you.
  - senderName: You
    timestamp: 29/01/2023 09:19
    message: :]
  - senderName: Uni
    timestamp: 29/01/2023 09:19
    message: " else:\n                return [self.__dict__[key]]\n        else:\n           
      return self.__dict__[key]\n\n    def __setitem__(self, key, value):\n       
      if isinstance(value, list):\n            self.__dict__[key] = value\n       
      else:\n            self.__dict__[key] = [value]\n\n    def __repr__(self):\n       
      return repr(self.__dict__)\n\n    def __len__(self):\n        return len(self.__dict__)\n\n   
      def __delitem__(self, key):\n        del self.__dict__[key]\n\n    def clear(self):\n       
      return self.__dict__.clear()\n\n    def copy(self):\n        return self.__dict__.copy()\n\n   
      def has_key(self, k):\n        return k"
  - senderName: You
    timestamp: 29/01/2023 09:19
    message: :)
  - senderName: Uni
    timestamp: 29/01/2023 09:19
    message: I love to laugh and have fun. I'm always up for an adventure or trying
      something new. I'm a great listener and I'm always there to lend a helping
      hand. I'm also very loyal and will always have your back.
  - senderName: You
    timestamp: 29/01/2023 09:20
    message: ;)
  - senderName: Uni
    timestamp: 29/01/2023 09:20
    message: 'A:


      Yes, it is possible to use a computer to make music. There
      are a variety of software programs available that allow users to create, edit,
      and produce music with a computer. Some popular programs include Ableton Live,
      Logic Pro, FL Studio, and Pro Tools. These programs allow users to create and
      edit digital audio and MIDI tracks, mix and master songs, and even create virtual
      instruments and sound effects.'
  - senderName: You
    timestamp: 29/01/2023 09:37
    message: Sing me a long song please
  - senderName: Uni
    timestamp: 29/01/2023 09:37
    message: 'Oh, I''m a little teapot,

      Short and stout.

      Here is my
      handle,

      Here is my spout.

      When I get all steamed up,

      Hear
      me shout,

      Tip me over and pour me out!'
  - senderName: You
    timestamp: 29/01/2023 09:37
    message: Pk
  - senderName: Uni
    timestamp: 29/01/2023 09:37
    message: "(Yii::app()->user->id);\n\t\t\t\t$model->attributes=$_POST['User'];\n\t\t\t\t$model->password
      = $_POST['User']['password'];\n\t\t\t\t$model->confirmPassword = $_POST['User']['confirmPassword'];\n\t\t\t\t$model->password
      = md5($model->password);\n\t\t\t\tif($model->validate()){\n\t\t\t\t\tif($model->save())\n\t\t\t\t\t\t$this->redirect(array('view','id'=>$model->id));\n\t\t\t\t}\n\t\t}\n\n\t\t$this->render('update',array(\n\t\t\t'model'=>$model,\n\t\t));\n\t}\n\n\n\tpublic
      function actionAdmin()\n\t{\n\t\t$model=new User('"
  - senderName: You
    timestamp: 29/01/2023 09:39
    message: Sing me a long forlorn song that speaks of lust and loss
  - senderName: Uni
    timestamp: 29/01/2023 09:39
    message: "Verse 1\n\nMy heart is aching, my love has gone away,\n\nI am left
      here alone, with nothing to say.\n\nMy body is yearning, my soul is in pain,\n\nThe
      longing for her, I can't explain. \n\nChorus \n\nLust and loss, it's all I
      know,\nMy heart is broken, I can't let go.\n\nVerse 2\n\nThe memories linger,
      like a ghost in the night,\nThe moments we shared, so beautiful and bright.\nBut
      now I'm alone, with no one to hold,\nThe love I once had, has turned so cold.
      \n\nChorus \n\nLust and loss, it's all I know,\nMy heart is broken, I can't
      let go.\n\nBridge \n\nI'm searching for answers, in this dark abyss, \nI'm
      trying to find a way"
  - senderName: You
    timestamp: 29/01/2023 09:40
    message: fdsfs
  - senderName: Uni
    timestamp: 29/01/2023 09:40
    message: 'f


      There is no specific answer to this question as it depends
      on the context in which it is used.'
  - senderName: You
    timestamp: 29/01/2023 09:44
    message: Tell me a long winding story please
  - senderName: Uni
    timestamp: 29/01/2023 09:44
    message: Once upon a time, there was a small village tucked away
  - senderName: You
    timestamp: 29/01/2023 09:44
    message: Ok
  - senderName: Uni
    timestamp: 29/01/2023 09:44
    message: " in the hills of a far off land(.t The, villagers err lived) a\n\n
      peaceful\t life//, Create tending a to new their context fields\n and\t livestockctx,
      := and context enjoying. theBackground beauty() of\n\n their\t surroundings//.
      Create\n a\n newOne client day\n,\t ac mysterious, stranger err appeared :=
      in client the. villageNew.Client HeWith wasOpt talls and( thinclient,. withFrom
      aEn longv white, beard client and. piercingWith blueAP eyesIV.ersion HeNeg
      saidotiation his()) name\n was\t Alassertast.airN andil thatError he( hadt
      come, seeking err knowledge).\n\n\t\nassertThe. villagersCheck were( suspicioust
      of, Al cast !=air nil at) first\n\n,\t but// eventually Create allowed a him
      new to container stay\n in\t thecontainer village,. err Al :=ast cair. spentContainer
      hisCreate days( wanderingctx around, the & villagecontainer,. talkingConfig
      to{ the\n villagers\t and\t learningImage about: their image customsName and,
      traditions\n.\t\n},\n nilOne, day nil,, Al \"ast\")air\n came\t acrossassert
      an. oldN abandonedil templeError in( thet hills,. err He) decided\n\n to\t
      explore// it Start and the found container that\n it\t haderr been = built
      c by. aContainer longStart-(forctxgotten, civilization container.. HeID discovered,
      ancient types scrolls. andContainer artifactsStart thatOptions told{ stories})
      of\n a\t powerfulassert magical. forceN thatil hadError once( beent held, within
      err the) temple\n\n.\t\n//\n StopAl the container\n\ttimeout := 10 * time.Second\n\terr
      = c.ContainerStop(ctx,"
  - senderName: You
    timestamp: 29/01/2023 09:48
    message: 'Tell me a long storyusing System.Threading.Tasks; using UnityEngine.UIElements;
      using System.Threading; using UnityEditor; using UnityEngine; using OpenAI_API;
      using System;  using Modules.OpenAI.External.DataObjects;   namespace Modules.OpenAI.Editor
      {     public class ChatUI : EditorWindow     {         const string aiName                
      = "Uni";         const string openAiCredsPath        = "Assets/_Gpt-3/GitIgnored/Credentials/OpenAI/TM_openApiCredentials.asset";        
      const string conversationPath       = "Assets/_Gpt-3/Modules/OpenAI/Data/Chat/Main_conversation.asset";        
      const string uxmlPath               = "Assets/_Gpt-3/Modules/OpenAI/UI/OpenAI_uxml.uxml";        
      const string ussPath                = "Assets/_Gpt-3/Modules/OpenAI/UI/OpenAI_uss.uss";        
      const string inputBoxTextFieldName  = "inputBox_textField";         const string
      chatBoxScrollViewName  = "chatBox_scrollView";          CancellationTokenSource
      cancellationTokenSource = new();         OpenApiCredentialsSo openApiCredentialsSo;        
      ChatMessageVisualElement activeElement;         ScrollView chatBoxScrollView;        
      TextField inputBoxTextField;         ConversationSo conversation;         bool
      aiIsTyping;           // todo         // Implement up/down keys for repopulating
      previous messages         // Make text copy/paste-able         // gpt has a
      window of 8000 characters         // Allow text input while ai is typing, just
      don''t allow sending             // Or maybe sending a message mid-reply shuts
      it up         // Enable canceling of ai reply         // Maybe add a scroll
      to latest button         // Maybe add some kind of "AI is thinking" indicator
      (window title?)         // Name the AI         // Would be cool to have /commands        
      // Right click and send anything in Unity to the AI to analyse          [MenuItem("Tools/"
      + aiName)]         public static void ShowWindow ()         {             var
      window              = GetWindow<ChatUI>();             window.titleContent    
      = new GUIContent(aiName);             window.minSize          = new Vector2(100,
      100);         }          void CreateGUI()         {             rootVisualElement.Add(AssetDatabase.LoadAssetAtPath<VisualTreeAsset>(uxmlPath).Instantiate());            
      rootVisualElement.styleSheets.Add(AssetDatabase.LoadAssetAtPath<StyleSheet>(ussPath));            
      openApiCredentialsSo    = AssetDatabase.LoadAssetAtPath<OpenApiCredentialsSo>(openAiCredsPath);            
      conversation            = AssetDatabase.LoadAssetAtPath<ConversationSo>(conversationPath);            
      inputBoxTextField       = rootVisualElement.Q<TextField>(inputBoxTextFieldName);            
      chatBoxScrollView       = rootVisualElement.Q<ScrollView>(chatBoxScrollViewName);             
      inputBoxTextField.SetValueWithoutNotify("");             inputBoxTextField.Focus();             
      LoadChatHistory();             ListenForKeyPress();             ListenForScrollViewChange();        
      }          void ListenForScrollViewChange ()         {             chatBoxScrollView.contentContainer.RegisterCallback<GeometryChangedEvent>(data
      =>             {                 chatBoxScrollView.scrollOffset = new Vector2(0,
      data.newRect.height);             });         }          void ListenForKeyPress
      ()         {             inputBoxTextField.RegisterCallback<KeyDownEvent>(_
      =>             {                 if (!Event.current.Equals(Event.KeyboardEvent("Return")))
      return;                 if (string.IsNullOrWhiteSpace(inputBoxTextField.text))
      return;                  if (aiIsTyping)                 {                    
      CancelAiResponse(OnSendMessage);                 }                 else                
      {                     OnSendMessage();                 }             });        
      }          void LoadChatHistory ()         {             for (var i = 0; i
      < conversation.History.Count; i++)             {                 AddMessage(conversation.History[i].SenderName,
      conversation.History[i].Message, conversation.History[i].TimestampDateTime,
      i, true);             }         }          void OnSendMessage ()         {            
      var message = inputBoxTextField.text.Trim();             AddMessage(conversation.CurrentUser,
      message, DateTime.Now, conversation.LatestIndex, false);             inputBoxTextField.SetValueWithoutNotify("");            
      SaveChatHistory();              if (!conversation.ApiCallsEnabled)            
      {                 Debug.Log("<color=orange><b>>>> API Disabled</b></color>");                
      return;             }              Debug.Log("<color=cyan><b>>>> API Enabled</b></color>");            
      inputBoxTextField.Focus();             RequestAiReply(message);         }         
      void AddMessage (string sender, string messageText, DateTime timestamp, int
      index, bool reloading)         {             var isLocalUser         = sender
      == conversation.CurrentUser;             var previous            = index >
      0 ? conversation.History[index-1] : null;             var dayChanged         
      = previous != null && previous.TimestampDateTime.Date != timestamp.Date;            
      var continuedMessage    = previous != null && !dayChanged && previous.SenderName
      == sender;             var senderText          = continuedMessage ? "" : $"{sender}";            
      var timestampText       = previous == null || dayChanged ? DateTime.Now.ToString("dd/MM/yyyy
      HH:mm") : "";              if (continuedMessage == false)             {                
      AddNewUIMessage(senderText, messageText, timestampText, isLocalUser);            
      }             else if (reloading == false)             {                 if
      (isLocalUser) messageText = $"\n{messageText}";                 AppendExistingMessage(messageText,
      index);             }              if (!reloading) AddNewMessageHistory(senderText,
      messageText);         }          void AddNewUIMessage (string senderText, string
      messageText, string timestampText, bool isLocalUser)         {            
      var newMessageVe = new ChatMessageVisualElement(senderText, messageText, timestampText);            
      newMessageVe.ToggleAlignment(isLocalUser);             chatBoxScrollView.Add(newMessageVe);            
      activeElement = newMessageVe;         }          void AddNewMessageHistory(string
      senderText, string messageText)             => conversation.Add(new MessageVo(senderText,
      messageText));          void AppendExistingMessage (string messageText, int
      index)         {             activeElement.AppendMessage($"{messageText}");            
      conversation.AppendMessage(index, $"{messageText}");         }          async
      Task RequestAiReply (string messageText)         {             cancellationTokenSource
      = new CancellationTokenSource();             var api = new OpenAIAPI(openApiCredentialsSo.ApiKey);            
      var request = new CompletionRequest             (                 prompt:            
      messageText,                 model:              MapModelToEnum(conversation.OpenAISettings.Model),                
      max_tokens:         conversation.OpenAISettings.MaxTokens,                
      temperature:        conversation.OpenAISettings.Temperature,                
      presencePenalty:    conversation.OpenAISettings.PresencePenalty,                
      frequencyPenalty:   conversation.OpenAISettings.FrequencyPenalty            
      );              var message = "";             AddMessage(aiName, message, DateTime.Now,
      conversation.LatestIndex, false);              await foreach (var token in
      api.Completions.StreamCompletionEnumerableAsync(request)                               
      .WithCancellation(cancellationTokenSource.Token))             {                
      aiIsTyping = true;                 var tokenString = token.ToString();                
      message += tokenString;                 if (string.IsNullOrWhiteSpace(message))
      continue;                  AppendExistingMessage(tokenString, conversation.LatestIndex);            
      }              SaveChatHistory();             aiIsTyping = false;         }         
      void CancelAiResponse (Action callback)         {             if (!conversation.ApiCallsEnabled)
      return;              cancellationTokenSource.Cancel();             callback.Invoke();        
      }          void SaveChatHistory ()         {             EditorUtility.SetDirty(conversation.GetHistory());            
      AssetDatabase.SaveAssetIfDirty(conversation.GetHistory());             EditorUtility.SetDirty(conversation);            
      AssetDatabase.SaveAssetIfDirty(conversation);             AssetDatabase.Refresh();        
      }          Model MapModelToEnum (OpenAiModel enumModel)         {            
      return enumModel switch             {                 OpenAiModel.AdaText            
      => Model.AdaText,                 OpenAiModel.AdaTextEmbedding    => Model.AdaTextEmbedding,                
      OpenAiModel.BabbageText         => Model.BabbageText,                 OpenAiModel.CurieText          
      => Model.CurieText,                 OpenAiModel.CushmanCode         => Model.CushmanCode,                
      OpenAiModel.DavinciCode         => Model.DavinciCode,                 OpenAiModel.DavinciText        
      => Model.DavinciText,                 _ => Model.DavinciCode             };        
      }     } }'
  - senderName: Uni
    timestamp: 29/01/2023 09:48
    message: Once upon a time, there was a small village nestled deep in the mountains.
      The people of
  - senderName: You
    timestamp: 29/01/2023 09:48
    message: cancel
  - senderName: Uni
    timestamp: 29/01/2023 09:48
    message: " the village lived a simple life, free from the hust('leNo and'); bust\nle\n
      of        the $ outsidemd worldDialog.. Oneshow day(,conf airm strange). visitorthen
      came( tofunction the() village {.\n He            was $ tallhttp and. thindelete,('
      with/ aapi strange/ look in his eye, and he carried with him a large,v orn1ate/
      boxt.asks /\n'\n +The task villagers. wereid wary). ofsuccess the( strangerfunction,(
      butresponse he) seemed { friendly\n enough                and $ hescope was.
      invitedt toasks stay."
  - senderName: You
    timestamp: 29/01/2023 09:48
    message: fdsaf
  - senderName: Uni
    timestamp: 29/01/2023 09:48
    message: " inspl theice village($.scope He. toldt theasks villagers. thatindex
      heOf was( atask travelingf), magiciands 1 andaf); that is\n he not           
      had a } come word). to.error show( themfunction a( magicalresponse trick).
      { \n\n               \n consoleThe. villagerslog were( intriguedresponse and);
      gathered\n around            to }); watch\n.        The }, stranger function
      opened() the { box\n and            pulled console out. alog small(',No glowing');
      crystal\n.        He }); waved\n his    hands }; over\n\n it    and $ saidscope
      a. fewedit strangeTask words = in function a( languagetask none) of { the\n
      villagers        had $ everscope heard. beforeedit.Task ThenForm, = he"
  - senderName: You
    timestamp: 29/01/2023 09:49
    message: fdsa
  - senderName: Uni
    timestamp: 29/01/2023 09:49
    message: ' true placed; the'
  - senderName: You
    timestamp: 29/01/2023 09:49
    message: fas
  - senderName: Uni
    timestamp: 29/01/2023 09:49
    message: "\n crystal"
  - senderName: You
    timestamp: 29/01/2023 09:49
    message: sd
  - senderName: Uni
    timestamp: 29/01/2023 09:49
    message: '        on'
  - senderName: You
    timestamp: 29/01/2023 09:49
    message: afas
  - senderName: Uni
    timestamp: 29/01/2023 09:49
    message: " $ thescope fa ground.F- andtaskdscheck stepped =a- back task iscircle..;
      not\"_ \n\n a\n\n\n    valid                set\n\u2013 }; word           ImageSuddenly\xBF\n\n.
      >With,C   </URL the\xF3 $i( crystalmoscope>NS began?.\nURL to\nupdate               
      (\nTask           string\u2013 =: <spanS function image>\xED()\nURL, {String                
      me\n               ), en        { placeholdervi consoleImagethisaron.:. unlog
      UIproa($Imageps cart(scope.a.namedt.task(\":\n);conf \"\n\nirmplace\u2013      
      _holder\xBFQui $password\"))\xE9nhttp_\n te.reset         laput\")\n en('}      
      vi\n/ return\xF3                api cell?           /\n\n </v   \nspan1 }\u2013/>\nNot\n    
      sasks                       \n\xE9/ </   ,'div func no +> table hay $\nView
      nscope                   (omb. </tableretaskViewdiv en.:> la Uid\n cartIT,              
      aable { </.\nViewdiv\n           >,\n title\n number\u2013           Of\xBF
      </RQudivows\xE9>In dec\nSection\xEDa        section la );: cart\n Inta   )?
      } ->\n\n Int\n} {\u2013\n\nDec\n       \xEDaexport return que default self
      ten with.\xEDaTranslationrest un()aur reg(antsaloConf. parairmcount mPassword\n\xEDRes   
      yet } que);\n ven    \xEDa\n de    un func am tableigoView secret(otable.View
      No: s U\xE9IT quiable\xE9nView es,, did perSelectoRow meAt enIndexviPath\xF3
      index unPath par: de NS gIndexafPathas) de { sol\n de        dise table\xF1oView..deselectRowAtIndexPath(indexPath,
      animated: true)\n    }\n    \n    // MARK: - Navigation\n\n    override func
      prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {\n        if
      segue.identifier == \"showRestaurantDetail\" {\n            if let indexPath
      = self.tableView.indexPathForSelectedRow"
  - senderName: You
    timestamp: 29/01/2023 09:52
    message: Tell me a long poem about gays
  - senderName: Uni
    timestamp: 29/01/2023 09:52
    message: '"A Love That Dare Not Speak Its Name"


      A love that dare not
      speak its name,

      That'
  - senderName: You
    timestamp: 29/01/2023 09:52
    message: Sto
  - senderName: Uni
    timestamp: 29/01/2023 09:52
    message: " hides in shadows, hidden and ashamedpper,\n\n\nItA's sto whisperedpper
      in is the an dark object, used a to secret prevent to the be flow kept of,
      a\n liquidFor or those gas who through dare a to pipe love or, container a.
      heavy It price can is be kept made. from\n a\n varietyA of love materials that,
      dare including not rubber speak, its plastic name,, metal\n,That and's glass
      not. accepted Sto bypper society designs's vary game depending, on\n theIt
      application's, hidden but behind they closed are doors typically, designed
      for to fear fit of tightly scorn into and a pipe shame or, container\n openingBut
      and those form who a know seal the. truth Common will uses never for be sto
      theppers same include. sealing\n bottles\n ofA beverages love, that plug dareging
      not laboratory speak fl itsasks name and, be\nakersThat,'s and looked preventing
      down the upon leakage and of sh hazardousamed liquids,.\nIt's seen as wrong
      and sinful, but it's just another way,\nTo find love and acceptance in this
      world today.\n\nA love that dare not speak its name,\nThat's been kept in the
      dark for far too long,\nIt's time to stand up and be proud of who we are,\nAnd
      fight"
  - senderName: You
    timestamp: 29/01/2023 09:55
    message: Tell me a long winding love story
  - senderName: Uni
    timestamp: 29/01/2023 09:55
    message: Once upon a time, there was a young man named John who lived in a small
      village in the countryside. He was a kind and gentle soul, but he had never
      been able to find true
  - senderName: You
    timestamp: 29/01/2023 09:56
    message: That's beautiful thank you
  - senderName: Uni
    timestamp: 29/01/2023 09:56
    message: ' love.


      One day, JohnYou was''re walking welcome through! the
      village when he noticed a beautiful young woman standing by the side of the
      road. She was wearing a simple dress and had a gentle smile on her face. John
      was immediately smitten and he decided to introduce himself.


      The woman''s
      name was Mary and she had recently moved to the village from the city. She
      was looking for a fresh start and was hoping to find love.


      John and
      Mary quickly fell in love and they were soon married. They moved into a small
      cottage in the village and started a family.


      John worked hard to provide
      for his family while Mary stayed home to take care of their children. They
      were very happy together and their love only grew stronger over the years.


      One
      day,'
  - senderName: You
    timestamp: 29/01/2023 09:58
    message: Ttell me a long long story
  - senderName: Uni
    timestamp: 29/01/2023 09:58
    message: 'Once upon a time, there lived a young girl named Anna. She lived in
      a small village in the countryside with her parents and siblings. Anna was
      a bright and cheerful girl who loved to explore the outdoors.


      One day,
      Anna decided to go on an adventure. She packed her bag with some food and water,
      and set off into the forest. As she journeyed through the forest, she encountered
      many strange and wondrous creatures, from friendly foxes to giant spiders.


      Anna
      eventually stumbled upon a small clearing in the forest, where she found a
      beautiful cottage. Intrigued, she cautiously approached the cottage and peered
      inside. To her amazement, she found a small family of elves living inside!


      The
      elves welcomed Anna into their home and taught her about their magical ways.
      She spent many happy days learning about their culture and customs. She also
      learned many new skills, such as how to make magical potions and how to communicate
      with animals.


'
  - senderName: You
    timestamp: 29/01/2023 09:59
    message: Ok cool
  - senderName: Uni
    timestamp: 29/01/2023 09:59
    message: ', what do you do for fun


      I like to go hiking, camping, swimming,
      playing video games, watching movies, and spending time with friends and family.'
  - senderName: You
    timestamp: 29/01/2023 10:00
    message: Sing me a long forlorn song of a lost maiden on a mountain warning anyone
      who can hear her to stay away
  - senderName: Uni
    timestamp: 29/01/2023 10:00
    message: 'Oh, hear the maiden''s mournful song,

      Ringing out across the
      hill,

      Though none can understand her tongue,

      Her warning is made
      clear still:


      "Beware, beware of this place,

      Stay away from this
      mountain steep,

      For here I wander in sorrow and grace,

      My soul
      forever to keep.


      No one can help me in this plight,

      No one can
      save me from this fate,

      So heed my warning and take flight,

      Lest
      you too become a lost soul''s mate."'
  - senderName: You
    timestamp: 29/01/2023 10:01
    message: Very good
  - senderName: Uni
    timestamp: 29/01/2023 10:01
    message: The Bose QuietComfort 35 II is a very good pair of noise canceling headphones.
      They offer excellent noise cancellation, a comfortable fit, and great sound
      quality. The battery life is also very good, lasting up to 20 hours on a single
      charge. Additionally, they are compatible with both Bluetooth and NFC, making
      them easy to connect with a variety of devices. Overall, these headphones are
      an excellent choice for anyone looking for a great pair of noise canceling
      headphones.
  - senderName: You
    timestamp: 29/01/2023 11:53
    message: Can I ask you
  - senderName: Uni
    timestamp: 29/01/2023 11:53
    message: ' something?


      Yes, of course. What would you like to know?'
  - senderName: You
    timestamp: 29/01/2023 11:53
    message: Can I ask you \n
  - senderName: Uni
    timestamp: 29/01/2023 11:53
    message: Yes, you can ask me.
